{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const loadCountryByName = createAsyncThunk(\"@@details/load-country-by-name\", (name, _ref) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref;\n  return client.get(api.searchByCountry(name));\n});\nexport const loadNeighborsByBorder = createAsyncThunk(\"@@details/load-neighbors\", (borders, _ref2) => {\n  let {\n    extra: {\n      client,\n      api\n    }\n  } = _ref2;\n  return client.get(api.filterByCode(borders));\n});\nconst initialState = {\n  currentCountry: null,\n  neighbors: [],\n  status: \"idle\",\n  error: null\n};\nconst detailsSlice = createSlice({\n  name: \"@@details\",\n  initialState,\n  reducers: {\n    clearDetails: () => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(loadCountryByName.pending, state => {\n      state.status = \"loading\";\n      state.error = null;\n    }).addCase(loadCountryByName.rejected, (state, action) => {\n      state.status = \"rejected\";\n      state.error = \"Cannot load data\";\n    }).addCase(loadCountryByName.fulfilled, (state, action) => {\n      state.status = \"idle\";\n      state.currentCountry = action.payload.data[0];\n    }).addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n      state.neighbors = action.payload.data.map(country => country.name);\n    });\n  }\n});\nexport const {\n  clearDetails\n} = detailsSlice.actions;\nexport const detailsReducer = detailsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","loadCountryByName","name","extra","client","api","get","searchByCountry","loadNeighborsByBorder","borders","filterByCode","initialState","currentCountry","neighbors","status","error","detailsSlice","reducers","clearDetails","extraReducers","builder","addCase","pending","state","rejected","action","fulfilled","payload","data","map","country","actions","detailsReducer","reducer"],"sources":["/Users/vladimirvihlaev/Desktop/code/ts-course/ts-course-proj3-redux/src/features/details/details-slice.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport { Country, Extra, Status } from \"types\"\n\ntype DetailsSlice = {\n\tcurrentCountry: Country | null\n\tneighbors: string[] | null\n\tstatus: Status\n\terror: string | null\n}\n\nexport const loadCountryByName = createAsyncThunk<\n\t{ data: Country[] },\n\tstring,\n\t{ extra: Extra }\n>(\"@@details/load-country-by-name\", (name, { extra: { client, api } }) => {\n\treturn client.get(api.searchByCountry(name))\n})\nexport const loadNeighborsByBorder = createAsyncThunk<\n    { data: Country[]},\n    string[],\n    { extra : Extra}\n>(\n\t\"@@details/load-neighbors\",\n\t(borders, { extra: { client, api } }) => {\n\t\treturn client.get(api.filterByCode(borders))\n\t}\n)\n\nconst initialState: DetailsSlice = {\n\tcurrentCountry: null,\n\tneighbors: [],\n\tstatus: \"idle\",\n\terror: null,\n}\n\nconst detailsSlice = createSlice({\n\tname: \"@@details\",\n\tinitialState,\n\treducers: {\n\t\tclearDetails: () => initialState,\n\t},\n\textraReducers: builder => {\n\t\tbuilder\n\t\t\t.addCase(loadCountryByName.pending, state => {\n\t\t\t\tstate.status = \"loading\"\n\t\t\t\tstate.error = null\n\t\t\t})\n\t\t\t.addCase(loadCountryByName.rejected, (state, action) => {\n\t\t\t\tstate.status = \"rejected\"\n\t\t\t\tstate.error = \"Cannot load data\"\n\t\t\t})\n\t\t\t.addCase(loadCountryByName.fulfilled, (state, action) => {\n\t\t\t\tstate.status = \"idle\"\n\t\t\t\tstate.currentCountry = action.payload.data[0]\n\t\t\t})\n\t\t\t.addCase(loadNeighborsByBorder.fulfilled, (state, action) => {\n\t\t\t\tstate.neighbors = action.payload.data.map(\n\t\t\t\t\tcountry => country.name\n\t\t\t\t)\n\t\t\t})\n\t},\n})\n\nexport const { clearDetails } = detailsSlice.actions\nexport const detailsReducer = detailsSlice.reducer\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAUA,OAAO,MAAMC,iBAAiB,GAAGF,gBAAgB,CAI/C,gCAJ+C,EAIb,CAACG,IAAD,WAAsC;EAAA,IAA/B;IAAEC,KAAK,EAAE;MAAEC,MAAF;MAAUC;IAAV;EAAT,CAA+B;EACzE,OAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACE,eAAJ,CAAoBL,IAApB,CAAX,CAAP;AACA,CANgD,CAA1C;AAOP,OAAO,MAAMM,qBAAqB,GAAGT,gBAAgB,CAKpD,0BALoD,EAMpD,CAACU,OAAD,YAAyC;EAAA,IAA/B;IAAEN,KAAK,EAAE;MAAEC,MAAF;MAAUC;IAAV;EAAT,CAA+B;EACxC,OAAOD,MAAM,CAACE,GAAP,CAAWD,GAAG,CAACK,YAAJ,CAAiBD,OAAjB,CAAX,CAAP;AACA,CARmD,CAA9C;AAWP,MAAME,YAA0B,GAAG;EAClCC,cAAc,EAAE,IADkB;EAElCC,SAAS,EAAE,EAFuB;EAGlCC,MAAM,EAAE,MAH0B;EAIlCC,KAAK,EAAE;AAJ2B,CAAnC;AAOA,MAAMC,YAAY,GAAGhB,WAAW,CAAC;EAChCE,IAAI,EAAE,WAD0B;EAEhCS,YAFgC;EAGhCM,QAAQ,EAAE;IACTC,YAAY,EAAE,MAAMP;EADX,CAHsB;EAMhCQ,aAAa,EAAEC,OAAO,IAAI;IACzBA,OAAO,CACLC,OADF,CACUpB,iBAAiB,CAACqB,OAD5B,EACqCC,KAAK,IAAI;MAC5CA,KAAK,CAACT,MAAN,GAAe,SAAf;MACAS,KAAK,CAACR,KAAN,GAAc,IAAd;IACA,CAJF,EAKEM,OALF,CAKUpB,iBAAiB,CAACuB,QAL5B,EAKsC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACvDF,KAAK,CAACT,MAAN,GAAe,UAAf;MACAS,KAAK,CAACR,KAAN,GAAc,kBAAd;IACA,CARF,EASEM,OATF,CASUpB,iBAAiB,CAACyB,SAT5B,EASuC,CAACH,KAAD,EAAQE,MAAR,KAAmB;MACxDF,KAAK,CAACT,MAAN,GAAe,MAAf;MACAS,KAAK,CAACX,cAAN,GAAuBa,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoB,CAApB,CAAvB;IACA,CAZF,EAaEP,OAbF,CAaUb,qBAAqB,CAACkB,SAbhC,EAa2C,CAACH,KAAD,EAAQE,MAAR,KAAmB;MAC5DF,KAAK,CAACV,SAAN,GAAkBY,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBC,GAApB,CACjBC,OAAO,IAAIA,OAAO,CAAC5B,IADF,CAAlB;IAGA,CAjBF;EAkBA;AAzB+B,CAAD,CAAhC;AA4BA,OAAO,MAAM;EAAEgB;AAAF,IAAmBF,YAAY,CAACe,OAAtC;AACP,OAAO,MAAMC,cAAc,GAAGhB,YAAY,CAACiB,OAApC"},"metadata":{},"sourceType":"module"}