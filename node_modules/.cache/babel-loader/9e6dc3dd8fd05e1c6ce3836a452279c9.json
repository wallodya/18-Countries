{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { selectControls } from 'features/controls/control-selectors';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from 'store';\nimport { selectCountriesInfo, selectVisibleCountries } from './countries-selectors';\nimport { loadCountries } from './countries-slice';\nexport const useCountries = () => {\n  _s();\n\n  const dispatch = useAppDispatch();\n  const controls = useSelector(selectControls);\n  const countries = useSelector(state => selectVisibleCountries(state, controls));\n  const {\n    status,\n    error,\n    qty\n  } = useSelector(selectCountriesInfo);\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n  return [countries, {\n    status,\n    error,\n    qty\n  }];\n};\n\n_s(useCountries, \"YxYk8KsEOCrZre3jNzjr0wneVP0=\", false, function () {\n  return [useAppDispatch, useSelector, useSelector, useSelector];\n});","map":{"version":3,"names":["selectControls","useEffect","useSelector","useAppDispatch","selectCountriesInfo","selectVisibleCountries","loadCountries","useCountries","dispatch","controls","countries","state","status","error","qty"],"sources":["/Users/vladimirvihlaev/Desktop/code/ts-course/ts-course-proj3-redux/src/features/countries/use-countries.ts"],"sourcesContent":["import { selectControls } from 'features/controls/control-selectors';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState, useAppDispatch } from 'store';\nimport { Country } from 'types';\n\nimport { selectCountriesInfo, selectVisibleCountries } from './countries-selectors';\nimport { loadCountries } from './countries-slice';\n\nexport const useCountries = (): [\n    Country[],\n    ReturnType<typeof selectCountriesInfo>\n] => {\n  const dispatch = useAppDispatch();\n  const controls = useSelector(selectControls);\n  const countries = useSelector((state: RootState) => selectVisibleCountries(state, controls));\n  const {status, error, qty} = useSelector(selectCountriesInfo);\n\n  useEffect(() => {\n    if (!qty) {\n      dispatch(loadCountries());\n    }\n  }, [qty, dispatch]);\n\n  return [countries, {status, error, qty}];\n}\n"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,qCAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAoBC,cAApB,QAA0C,OAA1C;AAGA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,uBAA5D;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAGvB;EAAA;;EACH,MAAMC,QAAQ,GAAGL,cAAc,EAA/B;EACA,MAAMM,QAAQ,GAAGP,WAAW,CAACF,cAAD,CAA5B;EACA,MAAMU,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAsBN,sBAAsB,CAACM,KAAD,EAAQF,QAAR,CAA7C,CAA7B;EACA,MAAM;IAACG,MAAD;IAASC,KAAT;IAAgBC;EAAhB,IAAuBZ,WAAW,CAACE,mBAAD,CAAxC;EAEAH,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,GAAL,EAAU;MACRN,QAAQ,CAACF,aAAa,EAAd,CAAR;IACD;EACF,CAJQ,EAIN,CAACQ,GAAD,EAAMN,QAAN,CAJM,CAAT;EAMA,OAAO,CAACE,SAAD,EAAY;IAACE,MAAD;IAASC,KAAT;IAAgBC;EAAhB,CAAZ,CAAP;AACD,CAhBM;;GAAMP,Y;UAIMJ,c,EACAD,W,EACCA,W,EACWA,W"},"metadata":{},"sourceType":"module"}