{"ast":null,"code":"export const selectCountriesInfo = state => ({\n  status: state.countries.status,\n  error: state.countries.error,\n  qty: state.countries.list.length\n});\nexport const selectAllCountries = state => state.countries.list;\nexport const selectVisibleCountries = (state, _ref) => {\n  let {\n    search = '',\n    region = ''\n  } = _ref;\n  return state.countries.list.filter(country => country.name.toLowerCase().includes(search.toLowerCase()) && country.region.includes(region));\n};","map":{"version":3,"names":["selectCountriesInfo","state","status","countries","error","qty","list","length","selectAllCountries","selectVisibleCountries","search","region","filter","country","name","toLowerCase","includes"],"sources":["/Users/vladimirvihlaev/Desktop/code/ts-course/ts-course-proj3-redux/src/features/countries/countries-selectors.ts"],"sourcesContent":["import { RootState } from \"store\";\n\nexport const selectCountriesInfo = (state: RootState) => ({\n    status: state.countries.status,\n    error: state.countries.error,\n    qty: state.countries.list.length\n  })\n  \n  export const selectAllCountries = (state: RootState) => state.countries.list;\n  \n  export const selectVisibleCountries = (state: RootState, {search = '', region = ''}) => {\n    return state.countries.list.filter(\n      country => (\n        country.name.toLowerCase().includes(search.toLowerCase()) && country.region.includes(region)\n      )\n    )\n  }\n  "],"mappings":"AAEA,OAAO,MAAMA,mBAAmB,GAAIC,KAAD,KAAuB;EACtDC,MAAM,EAAED,KAAK,CAACE,SAAN,CAAgBD,MAD8B;EAEtDE,KAAK,EAAEH,KAAK,CAACE,SAAN,CAAgBC,KAF+B;EAGtDC,GAAG,EAAEJ,KAAK,CAACE,SAAN,CAAgBG,IAAhB,CAAqBC;AAH4B,CAAvB,CAA5B;AAML,OAAO,MAAMC,kBAAkB,GAAIP,KAAD,IAAsBA,KAAK,CAACE,SAAN,CAAgBG,IAAjE;AAEP,OAAO,MAAMG,sBAAsB,GAAG,CAACR,KAAD,WAAkD;EAAA,IAA/B;IAACS,MAAM,GAAG,EAAV;IAAcC,MAAM,GAAG;EAAvB,CAA+B;EACtF,OAAOV,KAAK,CAACE,SAAN,CAAgBG,IAAhB,CAAqBM,MAArB,CACLC,OAAO,IACLA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCN,MAAM,CAACK,WAAP,EAApC,KAA6DF,OAAO,CAACF,MAAR,CAAeK,QAAf,CAAwBL,MAAxB,CAF1D,CAAP;AAKD,CANM"},"metadata":{},"sourceType":"module"}